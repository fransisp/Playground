/**
 * Organisation Services
 * These are the services for the organisation site. These will be called by the frontend to provide the data
 *
 * OpenAPI spec version: 1.0.0
 * Contact: fr.prayuda@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.server

import io.ktor.locations.KtorExperimentalLocationsAPI
import io.ktor.locations.Location


object Paths {
    /**
     * get the details of the given employee
     * get employee info of given ID
     * @param employeeID Employee ID that will be use for filter
     */
    @KtorExperimentalLocationsAPI
    @Location("/employee/{employeeID}")
    class getMemberInfo(val employeeID: kotlin.String)

    /**
     * get the details of the given branch
     * get branch info of given ID
     * @param branchID Branch ID that will be use for filter
     */
    @KtorExperimentalLocationsAPI
    @Location("/organisation/{branchID}")
    class getBranchInfo(val branchID: kotlin.Int)

    /**
     * get the details of the given department
     * get department info of given ID
     * @param branchID Branch ID that will be use for filter
     * @param departmentID Department ID that will be use for filter
     */
    @KtorExperimentalLocationsAPI
    @Location("/organisation/{branchID}/department/{departmentID}")
    class getDepartmentInfo(val branchID: kotlin.Int, val departmentID: kotlin.Int)

}
